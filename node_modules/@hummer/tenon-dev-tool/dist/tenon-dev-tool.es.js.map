{"version":3,"file":"tenon-dev-tool.es.js","sources":["../src/utils.ts","../src/storageintercept.ts","../src/memoryintercept.ts","../src/requestintercept.ts","../src/socket.ts","../src/index.ts"],"sourcesContent":["// tenon 节点类型定义\nconst NODE_VIEW = \"Symbol(NODE_VIEW)\";\nconst NODE_TEXT = \"Symbol(NODE_TEXT)\";\nconst NODE_IMAGE = \"Symbol(NODE_IMAGE)\"\nconst NODE_BUTTON = \"Symbol(NODE_BUTTON)\"\nconst NODE_TEXTAREA = \"Symbol(NODE_TEXTAREA)\"\nconst NODE_INPUT = \"Symbol(NODE_INPUT)\"\nconst NODE_SWITCH = \"Symbol(NODE_SWITCH)\"\nconst NODE_SCROLLER = \"Symbol(NODE_SCROLLER)\"\nconst NODE_REFRESH = \"Symbol(NODE_REFRESH)\"\nconst NODE_LOADMORE = \"Symbol(NODE_LOADMORE)\"\n// hummer 节点类型定义\nconst HUMMER_VIEW = 'View'\nconst HUMMER_TEXT = 'Text'\nconst HUMMER_BUTTON = 'Button'\nconst HUMMER_IMAGE = 'Image'\nconst HUMMER_INPUT = 'Input'\nconst HUMMER_TEXTAREA = 'TextArea'\nconst HUMMER_SWITCH = 'Switch'\nconst HUMMER_LOADING = 'Loading'\nconst HUMMER_SCROLLER = 'Scroller'\nconst HUMMER_HORIZONTALSCROLLER = 'HorizontalScroller'\nconst HUMMER_LIST = 'List'\nconst HUMMER_VIEWPAGER = 'ViewPager'\nconst HUMMER_DIALOG = 'Dialog'\n\n\nfunction getElementTagMap() {\n  let tagMap = new Map();\n  tagMap.set(NODE_VIEW, 'view');\n  tagMap.set(NODE_TEXT, 'text');\n  tagMap.set(NODE_IMAGE, 'image');\n  tagMap.set(NODE_BUTTON, 'button');\n  tagMap.set(NODE_TEXTAREA, 'textarea');\n  tagMap.set(NODE_INPUT, 'input');\n  tagMap.set(NODE_SWITCH, 'switch');\n  tagMap.set(NODE_SCROLLER, 'scroller');\n  tagMap.set(NODE_REFRESH, 'refresh');\n  tagMap.set(NODE_LOADMORE, 'loadmore');\n\n  tagMap.set(HUMMER_VIEW, 'view');\n  tagMap.set(HUMMER_TEXT, 'text');\n  tagMap.set(HUMMER_BUTTON, 'button');\n  tagMap.set(HUMMER_IMAGE, 'image');\n  tagMap.set(HUMMER_INPUT, 'input');\n  tagMap.set(HUMMER_TEXTAREA, 'textarea');\n  tagMap.set(HUMMER_SWITCH, 'switch');\n  tagMap.set(HUMMER_LOADING, 'loading');\n  tagMap.set(HUMMER_SCROLLER, 'scroller');\n  tagMap.set(HUMMER_HORIZONTALSCROLLER, 'horizontalscroller');\n  tagMap.set(HUMMER_LIST, 'list');\n  tagMap.set(HUMMER_VIEWPAGER, 'viewpager');\n  tagMap.set(HUMMER_DIALOG, 'view');\n\n  return tagMap;\n}\n\nexport const ELEMNT_TAG_MAP = getElementTagMap()\n\nexport const getPartUrlByParam = (url: string, param: string) => {\n  const reg = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n  const res: any = reg.exec(url)\n  const fields = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\n  return res[fields.indexOf(param)]\n}\n\n/**\n * 格式化来自不同框架的视图节点（hummer/tenon-vue/tenon-react）\n * @param node \n * @param type \n * @returns simplenode\n */\nexport const formatNode = function (node: any, type: string = 'tenon-vue') {\n  let formatedNode = Object.create({})\n  const treeTraveler = function (node: any, rootView: any) {\n    processView(node, rootView, type)\n    if (node.children) {\n      // hummer children类型Array tenon-vue类型Set 处理一下\n      let arr = Array.from(node.children)\n      if (arr.length) {\n        rootView.children = Array.apply(null, new Array(arr.length)).map(() => { return {} })\n        arr.forEach((n, i) => {\n          treeTraveler(n, rootView.children[i])\n        })\n      }\n    }\n  }\n  treeTraveler(node, formatedNode)\n  return formatedNode\n}\n\nexport const getViewData = function (container: any, type: string = 'tenon-vue') {\n  let simpleRoot = Object.create({})\n  let viewMap = Object.create({})\n  const treeTraveler = function (node: any, rootView: any) {\n    if (node?.tagName) {\n      node.name = node?.tagName.toLowerCase()\n      node.style = node?.element?._style\n      node.__view_id = node?.element?.objID\n      switch (node.name) {\n        case 'text':\n          node.text = node.element?._text\n          break;\n        case 'image':\n          node.src = node.element?._src\n          break;\n        default:\n          break;\n      }\n    }\n    rootView = Object.assign(rootView, node)\n    viewMap[rootView.__view_id] = node\n    delete rootView.children\n    delete rootView.element\n    if (node.name === 'template' && node !== container) {\n      if (node?.element.dbg_getDescription) {\n        node?.element.dbg_getDescription((thatNode: any) => {\n          if (thatNode?.children) {\n            thatNode.children.forEach((item: any, index: number) => {\n              thatNode.children[index].name = item?.tagName\n              thatNode.children[index].style = item?.element?._style\n              thatNode.children[index].__view_id = item?.element?.objID\n              switch (item.name) {\n                case 'Text':\n                  thatNode.children[index].text = item.element._text\n                  break;\n                case 'Image':\n                  thatNode.children[index].src = item.element._src\n                  break;\n                default:\n                  break;\n              }\n            });\n            node.children = thatNode.children\n          }\n          node.name = thatNode.tagName.toLowerCase()\n          rootView.name = node.name\n          if (node.children && node.children.length > 0) {\n            rootView.children = Array.apply(null, new Array(node?.children?.length || 0)).map(() => { return {} })\n            let arr = Array.from(node.children)\n            arr.forEach((n, i) => {\n              treeTraveler(n, rootView.children[i])\n            })\n          }\n        })\n        // let element = await getDescription(node?.element)\n        //@ts-ignore\n        // node.children = element.children\n        // if (node.children && node.children.length > 0) {\n        //   rootView.children = Array.apply(null, new Array(node?.children?.length || 0)).map(() => { return {} })\n        //   let arr = Array.from(node.children)\n        //   arr.forEach((n, i) => {\n        //     treeTraveler(n, rootView.children[i])\n        //   })\n        // }\n      }\n    } else {\n      if (node.children && node.children.length > 0) {\n        rootView.children = Array.apply(null, new Array(node?.children?.length || 0)).map(() => { return {} })\n        let arr = Array.from(node.children)\n        arr.forEach((n, i) => {\n          treeTraveler(n, rootView.children[i])\n        })\n      }\n    }\n  }\n  treeTraveler(container, simpleRoot)\n  return {\n    simpleRoot,\n    viewMap\n  }\n}\n// const getDescription = async function (element: any) {\n//   return await new Promise((res, rej) => {\n//     element.dbg_getDescription((thatNode: any) => {\n//       res(thatNode)\n//     })\n//   }).then((res) => {\n//     return res\n//   })\n// }\nconst processView = function (node: any, rootView: any, type: string = 'tenon-vue') {\n  let nameKey = '__NAME',\n    idKey = '__view_id',\n    textKey = '_text',\n    srcKey = '_src',\n    elementKey = 'element',\n    styleKey = 'style',\n    classNameKey = 'className'\n\n  rootView.style = node[styleKey]\n\n  switch (type) {\n    case 'hummer':\n      nameKey = 'tagName'\n      idKey = 'id'\n      textKey = 'content'\n      srcKey = 'content'\n      rootView.style = node.element.style\n      break;\n    default:\n      break;\n  }\n\n  rootView.__view_id = node[idKey]\n  rootView.name = node[nameKey] && ELEMNT_TAG_MAP.get(node[nameKey].toString()) || 'template'\n  rootView.element = node[elementKey]\n  rootView.className = node[classNameKey]\n  node[elementKey]?.node&&(node[elementKey].node.__view_id = node[idKey])\n  switch (rootView.name) {\n    case 'text':\n      rootView.text = node[textKey]\n      break;\n    case 'image':\n      rootView.src = node[srcKey]\n      break;\n    default:\n      break;\n  }\n  // viewMap[rootView.__view_id] = node\n}\n\nexport const updateOptions = function (oldOptions: any, newOptions: any) {\n  for (const key in oldOptions) {\n    if (!(key in newOptions)) {\n      delete oldOptions[key]\n    }\n  }\n  for (const key in newOptions) {\n    oldOptions[key] = newOptions[key]\n  }\n  return oldOptions\n}\n\nexport const log = function (str: String) {\n  console.info(`[RUNTIME_DEV_TOOL]: ${str}`)\n}\n\nexport const error = function (str: String) {\n  console.error(`[RUNTIME_DEV_TOOL]: ${str}`)\n}\n\nexport const guid = function () {\n  function S4() {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  }\n  return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4())\n}\n\nexport const logHola = function () {\n  console.info('          _____                    _____                    _____                    _____                    _____                    _____          ')\n  console.info(`         /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\         `)\n  console.info(`        /::\\____\\                /::\\____\\                /::\\____\\                /::\\____\\                /::\\    \\                /::\\    \\        `)\n  console.info(`       /:::/    /               /:::/    /               /::::|   |               /::::|   |               /::::\\    \\              /::::\\    \\       `)\n  console.info(`      /:::/    /               /:::/    /               /:::::|   |              /:::::|   |              /::::::\\    \\            /::::::\\    \\      `)\n  console.info(`     /:::/    /               /:::/    /               /::::::|   |             /::::::|   |             /:::/\\:::\\    \\          /:::/\\:::\\    \\     `)\n  console.info(`    /:::/____/               /:::/    /               /:::/|::|   |            /:::/|::|   |            /:::/__\\:::\\    \\        /:::/__\\:::\\    \\    `)\n  console.info(`   /::::\\    \\              /:::/    /               /:::/ |::|   |           /:::/ |::|   |           /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\   `)\n  console.info(`  /::::::\\    \\   _____    /:::/    /      _____    /:::/  |::|___|______    /:::/  |::|___|______    /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\  `)\n  console.info(` /:::/\\:::\\    \\ /\\    \\  /:::/____/      /\\    \\  /:::/   |::::::::\\    \\  /:::/   |::::::::\\    \\  /:::/\\:::\\   \\:::\\    \\  /:::/\\:::\\   \\:::\\____\\ `)\n  console.info(`/:::/  \\:::\\    /::\\____\\|:::|    /      /::\\____\\/:::/    |:::::::::\\____\\/:::/    |:::::::::\\____\\/:::/__\\:::\\   \\:::\\____\\/:::/  \\:::\\   \\:::|    |`)\n  console.info(`\\::/    \\:::\\  /:::/    /|:::|____\\     /:::/    /\\::/    / ~~~~~/:::/    /\\::/    / ~~~~~/:::/    /\\:::\\   \\:::\\   \\::/    /\\::/   |::::\\  /:::|____|`)\n  console.info(` \\/____/ \\:::\\/:::/    /  \\:::\\    \\   /:::/    /  \\/____/      /:::/    /  \\/____/      /:::/    /  \\:::\\   \\:::\\   \\/____/  \\/____|:::::\\/:::/    / `)\n  console.info(`          \\::::::/    /    \\:::\\    \\ /:::/    /               /:::/    /               /:::/    /    \\:::\\   \\:::\\    \\            |:::::::::/    /  `)\n  console.info(`           \\::::/    /      \\:::\\    /:::/    /               /:::/    /               /:::/    /      \\:::\\   \\:::\\____\\           |::|\\::::/    /   `)\n  console.info(`           /:::/    /        \\:::\\__/:::/    /               /:::/    /               /:::/    /        \\:::\\   \\::/    /           |::| \\::/____/    `)\n  console.info(`          /:::/    /          \\::::::::/    /               /:::/    /               /:::/    /          \\:::\\   \\/____/            |::|  ~|          `)\n  console.info(`         /:::/    /            \\::::::/    /               /:::/    /               /:::/    /            \\:::\\    \\                |::|   |          `)\n  console.info(`        /:::/    /              \\::::/    /               /:::/    /               /:::/    /              \\:::\\____\\               \\::|   |          `)\n  console.info(`        \\::/    /                \\::/____/                \\::/    /                \\::/    /                \\::/    /                \\:|   |          `)\n  console.info(`         \\/____/                  ~~                       \\/____/                  \\/____/                  \\/____/                  \\|___|          `)\n}\n","import { sendMessage } from './socket'\nconst { __storageInterceptFlag__, Storage, Memory } = __GLOBAL__\nexport const getAllStorage = (ws: any, params: any) => {\n    let storageAll = Storage.getAll();\n    let newStorageAll = []\n    for (const key in storageAll) {\n        if(/_#_hummer_.*_#_/.test(key)){\n            continue;\n        }\n        let item = {\n            key: key,\n            value: storageAll[key],\n        }\n        newStorageAll.push(item);\n    }\n    sendMessage(ws, {\n        type: 'storage',\n        method: 'setStorageList',\n        params: {\n            ...params,\n            storageAll: newStorageAll\n        }\n    })\n}\n// Storage拦截\nexport const storageintercept = (ws: any): void => {\n    __GLOBAL__.__storageInterceptFlag__ = true\n    !__storageInterceptFlag__ && (__GLOBAL__.__storageOriginSet__ = Storage.set, __GLOBAL__.__storageOriginRemove__ = Storage.remove, __GLOBAL__.__storageOriginRemoveAll__ = Storage.removeAll)\n    Storage.set = function () {\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\n            sendMessage(ws, {\n                type: 'storage',\n                method: 'updateStorageList',\n                params: {\n                    tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\"),\n                    key: arguments[0],\n                    value: arguments[1],\n                }\n            })\n        }\n        __GLOBAL__.__storageOriginSet__.apply(this, arguments)\n    }\n\n    Storage.remove = function () {\n        __GLOBAL__.__storageOriginRemove__.apply(this, arguments)\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\n            getAllStorage(ws, {tenonIp:Memory.get(\"_#_hummer_tenonIp_#_\")})\n        }\n    }\n\n    Storage.removeAll = function () {\n        __GLOBAL__.__storageOriginRemoveAll__.apply(this, arguments)\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\n            sendMessage(ws, {\n                type: 'storage',\n                method: 'setStorageList',\n                params: {\n                    tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\"),\n                    storageAll: []\n                }\n            })\n        }\n    }\n}","import { sendMessage } from './socket'\nconst { __memoryInterceptFlag__, Memory } = __GLOBAL__\nexport const getAllMemory = (ws: any, params: any) => {\n    let memoryAll = Memory.getAll();\n    let newMemoryAll = []\n    for (const key in memoryAll) {\n        if(/_#_hummer_.*_#_/.test(key)){\n            continue;\n        }\n        let item = {\n            key: key,\n            value: memoryAll[key],\n        }\n        newMemoryAll.push(item);\n    }\n    sendMessage(ws, {\n        type: 'memory',\n        method: 'setMemoryList',\n        params: {\n            ...params,\n            memoryAll: newMemoryAll\n        }\n    })\n}\n// Memory拦截\nexport const memoryintercept = (ws: any): void => {\n    __GLOBAL__.__memoryInterceptFlag__ = true\n    !__memoryInterceptFlag__ && (__GLOBAL__.__memoryOriginSet__ = Memory.set, __GLOBAL__.__memoryOriginRemove__ = Memory.remove, __GLOBAL__.__memoryOriginRemoveAll__ = Memory.removeAll)\n    Memory.set = function () {\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\n            sendMessage(ws, {\n                type: 'memory',\n                method: 'updateMemoryList',\n                params: {\n                    tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\"),\n                    key: arguments[0],\n                    value: arguments[1],\n                }\n            })\n        }\n        __GLOBAL__.__memoryOriginSet__.apply(this, arguments)\n    }\n\n    Memory.remove = function () {\n        __GLOBAL__.__memoryOriginRemove__.apply(this, arguments)\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\n            getAllMemory(ws, {tenonIp:Memory.get(\"_#_hummer_tenonIp_#_\")})\n        }\n    }\n\n    Memory.removeAll = function () {\n        __GLOBAL__.__memoryOriginRemoveAll__.apply(this, arguments)\n        if (Memory.get(\"_#_hummer_tenonIp_#_\")) {\n            sendMessage(ws, {\n                type: 'memory',\n                method: 'setMemoryList',\n                params: {\n                    tenonIp: Memory.get(\"_#_hummer_tenonIp_#_\"),\n                    memoryAll: []\n                }\n            })\n        }\n    }\n}","import { guid } from './utils'\nimport { sendMessage } from './socket'\n// Request拦截\nexport const requestintercept = (ws: any):void => {\n    const { Request, __requestInterceptFlag__ } = __GLOBAL__\n    __GLOBAL__.__requestInterceptFlag__ = true\n    !__requestInterceptFlag__ && (__GLOBAL__.__requestOriginSend__ = Request.prototype.send)\n    Request.prototype.send = function () {\n        const requestId = guid()\n        sendMessage(ws, {\n            type: 'netWork',\n            method: 'updateNetWorkList',\n            params: {\n                id: requestId,\n                requestInfo: {\n                    method: this.method,\n                    header: this.header,\n                    url: this.url,\n                    param: this.param,\n                },\n            }\n        })\n        const callback = arguments[0]\n        const mergeCallback = (res: any) => {\n            sendMessage(ws, {\n                type: 'netWork',\n                method: 'updateNetWorkList',\n                params: {\n                    id: requestId,\n                    responseInfo: res,\n                }\n            })\n            callback.call(this, res)\n        }\n        __GLOBAL__.__requestOriginSend__.apply(this, [mergeCallback])\n    }\n}","import { log } from './utils'\nimport { storageintercept } from './storageintercept'\nimport { memoryintercept } from './memoryintercept'\nimport { requestintercept } from './requestintercept'\n\nlet ws:any, currentType:string\nexport default function (url:string, handlers:any) {\n  ws = new __GLOBAL__.WebSocket(url);\n  // 设置各种监听回调\n  ws.onopen = () => {\n    log('websocket opened~');\n    storageintercept(ws);\n    memoryintercept(ws);\n    requestintercept(ws);\n  }\n\n  ws.onmessage = (event:any) => {\n    log(JSON.stringify(event))\n    let msg = JSON.parse(event.data)\n    currentType = msg.type || ''\n    if (handlers[msg.method]) {\n      handlers[msg.method](ws, msg.params)\n    }\n  }\n\n  ws.onclose = () => {\n    ws = null\n    log('websocket closed~');\n  }\n}\n\nexport const sendMessage = function (ws:any, options:any) {\n  // Todo: 兜底策略模式\n  const type = options.type || currentType\n  const method = options.method || 'ignore'\n  const params = options.params || {}\n  ws.send(JSON.stringify({\n    type, method, params\n  }))\n}","import initSocket, { sendMessage } from './socket'\nimport { getPartUrlByParam, getViewData, updateOptions, log, error, formatNode } from './utils'\nimport { getAllStorage } from './storageintercept'\nimport { getAllMemory } from './memoryintercept'\n/**\n * DevTool 启动入口函数\n * @param container 页面实例，通过引用可以拿到整个视图树，以及视图上的各个实例\n */\n// Tip: hummer-front 兼容\nlet isWebPlatform = __GLOBAL__.Hummer.pageInfo && JSON.stringify(__GLOBAL__.Hummer.pageInfo) === '{}'\n\nexport function run(container: any, type: string = 'tenon-vue') {\n  let formatedNode = formatNode(container, type)\n  log('Socket Initializing')\n  const { url } = __GLOBAL__.Hummer.pageInfo || {}\n  // 部分接入方使用自己的容器 没有pageInfo属性 直接报错&return\n  if (!url) {\n    error(`get url error, initialization failed`)\n    return\n  }\n  const { Storage, Memory } = __GLOBAL__\n  let host = getPartUrlByParam(url, 'host')\n  let port = getPartUrlByParam(url, 'port')\n  let path = getPartUrlByParam(url, 'path')\n  let scheme = getPartUrlByParam(url, 'scheme')\n  // scheme错误 or 没有端口 报错&return\n  if (!['http', 'https'].includes(scheme) || !port) {\n    error(`invalid url[${url}], initialization failed`)\n    return\n  }\n  let wsTenonUrl = `ws://${host}:${port}/proxy/tenon`\n  // Tip: hummer-front 兼容\n  if (isWebPlatform) {\n    // 本地 cli ip\n    wsTenonUrl = 'ws://172.23.166.43:8000/proxy/tenon'\n  }\n  // @ts-ignore\n  let viewMap = {}, viewId: number, view: any\n  const onSocketMsgHandlers = {\n    'getViewTree': function (ws: any, params: any) {\n      let data = getViewData(formatedNode, type)\n      viewMap = data.viewMap\n      if (formatedNode?.element?.dbg_getDescription) {\n        formatedNode.element.dbg_getDescription((node: any) => {\n          sendMessage(ws, {\n            method: 'setViewTree',\n            params: {\n              ...params,\n              viewTree: [data.simpleRoot],\n              path: path,\n              baseInfo: __GLOBAL__.Hummer.env,\n              devToolType: type\n            }\n          })\n        })\n      } else {\n        sendMessage(ws, {\n          method: 'setViewTree',\n          params: {\n            ...params,\n            viewTree: [data.simpleRoot],\n            path: path,\n            baseInfo: __GLOBAL__.Hummer.env,\n            devToolType: type\n          }\n        })\n      }\n    },\n    'getViewInfo': function (ws: any, params: any) {\n      viewId = params.viewId\n      // @ts-ignore\n      view = viewMap[viewId]\n      view.element.getRect((rect: any) => {\n        view.element.dbg_highlight && view.element.dbg_highlight(true)\n        sendMessage(ws, {\n          method: 'setViewInfo',\n          params: {\n            ...params,\n            rect: rect,\n            style: view.style,\n            className: view.className || ''\n          }\n        })\n      })\n    },\n    'setViewStyle': function (ws: any, params: any) {\n      viewId = params.viewId\n      // @ts-ignore\n      view = viewMap[viewId]\n      const style = params.style\n      view.element.style = updateOptions(view.style, style)\n      sendMessage(ws, { method: 'setStyleSuccess' })\n    },\n    'setStorage': function (ws: any, params: any) {\n      const { type, key, value } = params.storage\n      switch (type) {\n        case 'delete':\n          Storage.remove(key)\n          break;\n        case 'revise':\n          Storage.set(key, value)\n          break;\n        default:\n          break;\n      }\n      sendMessage(ws, { method: 'setStorageSuccess' })\n    },\n    'getStorage': function (ws: any, params: any) {\n      Memory.set(\"_#_hummer_tenonIp_#_\", params?.tenonIp);\n      getAllStorage(ws, params);\n    },\n    'setMemory': function (ws: any, params: any) {\n      const { type, key, value } = params.memory\n      switch (type) {\n        case 'delete':\n          Memory.remove(key)\n          break;\n        case 'revise':\n          Memory.set(key, value)\n          break;\n        default:\n          break;\n      }\n      sendMessage(ws, { method: 'setMemorySuccess' })\n    },\n    'getMemory': function (ws: any, params: any) {\n      Memory.set(\"_#_hummer_tenonIp_#_\", params?.tenonIp);\n      getAllMemory(ws, params);\n    },\n  }\n  initSocket(wsTenonUrl, onSocketMsgHandlers)\n  log('Socket initializing complete')\n}"],"names":["Memory"],"mappings":"AACA,MAAM,SAAS,GAAG,mBAAmB,CAAC;AACtC,MAAM,SAAS,GAAG,mBAAmB,CAAC;AACtC,MAAM,UAAU,GAAG,oBAAoB,CAAA;AACvC,MAAM,WAAW,GAAG,qBAAqB,CAAA;AACzC,MAAM,aAAa,GAAG,uBAAuB,CAAA;AAC7C,MAAM,UAAU,GAAG,oBAAoB,CAAA;AACvC,MAAM,WAAW,GAAG,qBAAqB,CAAA;AACzC,MAAM,aAAa,GAAG,uBAAuB,CAAA;AAC7C,MAAM,YAAY,GAAG,sBAAsB,CAAA;AAC3C,MAAM,aAAa,GAAG,uBAAuB,CAAA;AAE7C,MAAM,WAAW,GAAG,MAAM,CAAA;AAC1B,MAAM,WAAW,GAAG,MAAM,CAAA;AAC1B,MAAM,aAAa,GAAG,QAAQ,CAAA;AAC9B,MAAM,YAAY,GAAG,OAAO,CAAA;AAC5B,MAAM,YAAY,GAAG,OAAO,CAAA;AAC5B,MAAM,eAAe,GAAG,UAAU,CAAA;AAClC,MAAM,aAAa,GAAG,QAAQ,CAAA;AAC9B,MAAM,cAAc,GAAG,SAAS,CAAA;AAChC,MAAM,eAAe,GAAG,UAAU,CAAA;AAClC,MAAM,yBAAyB,GAAG,oBAAoB,CAAA;AACtD,MAAM,WAAW,GAAG,MAAM,CAAA;AAC1B,MAAM,gBAAgB,GAAG,WAAW,CAAA;AACpC,MAAM,aAAa,GAAG,QAAQ,CAAA;AAG9B,SAAS,gBAAgB;IACvB,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;IACvB,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC9B,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC9B,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IACtC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IACtC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACpC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IAEtC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IACpC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IAClC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IACxC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IACpC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;IACtC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IACxC,MAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,oBAAoB,CAAC,CAAC;IAC5D,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAChC,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAC1C,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAElC,OAAO,MAAM,CAAC;AAChB,CAAC;AAEM,MAAM,cAAc,GAAG,gBAAgB,EAAE,CAAA;AAEzC,MAAM,iBAAiB,GAAG,CAAC,GAAW,EAAE,KAAa;IAC1D,MAAM,GAAG,GAAG,iGAAiG,CAAC;IAC9G,MAAM,GAAG,GAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAC9B,MAAM,MAAM,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACnF,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;AACnC,CAAC,CAAA;AAQM,MAAM,UAAU,GAAG,UAAU,IAAS,EAAE,OAAe,WAAW;IACvE,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IACpC,MAAM,YAAY,GAAG,UAAU,IAAS,EAAE,QAAa;QACrD,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;QACjC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAEjB,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACnC,IAAI,GAAG,CAAC,MAAM,EAAE;gBACd,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,OAAO,EAAE,CAAA,EAAE,CAAC,CAAA;gBACrF,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;oBACf,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;iBACtC,CAAC,CAAA;aACH;SACF;KACF,CAAA;IACD,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;IAChC,OAAO,YAAY,CAAA;AACrB,CAAC,CAAA;AAEM,MAAM,WAAW,GAAG,UAAU,SAAc,EAAE,OAAe,WAAW;IAC7E,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IAClC,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IAC/B,MAAM,YAAY,GAAG,UAAU,IAAS,EAAE,QAAa;;QACrD,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,WAAW,EAAE,CAAA;YACvC,IAAI,CAAC,KAAK,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,MAAM,CAAA;YAClC,IAAI,CAAC,SAAS,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,KAAK,CAAA;YACrC,QAAQ,IAAI,CAAC,IAAI;gBACf,KAAK,MAAM;oBACT,IAAI,CAAC,IAAI,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,KAAK,CAAA;oBAC/B,MAAM;gBACR,KAAK,OAAO;oBACV,IAAI,CAAC,GAAG,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,IAAI,CAAA;oBAC7B,MAAM;aAGT;SACF;QACD,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;QACxC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;QAClC,OAAO,QAAQ,CAAC,QAAQ,CAAA;QACxB,OAAO,QAAQ,CAAC,OAAO,CAAA;QACvB,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,SAAS,EAAE;YAClD,IAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,kBAAkB,EAAE;gBACpC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,QAAa;;oBAC7C,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,EAAE;wBACtB,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAa;;4BACjD,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAA;4BAC7C,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,MAAM,CAAA;4BACtD,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,KAAK,CAAA;4BACzD,QAAQ,IAAI,CAAC,IAAI;gCACf,KAAK,MAAM;oCACT,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAA;oCAClD,MAAM;gCACR,KAAK,OAAO;oCACV,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAA;oCAChD,MAAM;6BAGT;yBACF,CAAC,CAAC;wBACH,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAA;qBAClC;oBACD,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAA;oBAC1C,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;oBACzB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC7C,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,0CAAE,MAAM,KAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,OAAO,EAAE,CAAA,EAAE,CAAC,CAAA;wBACtG,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;wBACnC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;4BACf,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;yBACtC,CAAC,CAAA;qBACH;iBACF,CAAC,CAAA;aAWH;SACF;aAAM;YACL,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7C,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,0CAAE,MAAM,KAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,OAAO,EAAE,CAAA,EAAE,CAAC,CAAA;gBACtG,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;gBACnC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;oBACf,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;iBACtC,CAAC,CAAA;aACH;SACF;KACF,CAAA;IACD,YAAY,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;IACnC,OAAO;QACL,UAAU;QACV,OAAO;KACR,CAAA;AACH,CAAC,CAAA;AAUD,MAAM,WAAW,GAAG,UAAU,IAAS,EAAE,QAAa,EAAE,OAAe,WAAW;;IAChF,IAAI,OAAO,GAAG,QAAQ,EACpB,KAAK,GAAG,WAAW,EACnB,OAAO,GAAG,OAAO,EACjB,MAAM,GAAG,MAAM,EACf,UAAU,GAAG,SAAS,EACtB,QAAQ,GAAG,OAAO,EAClB,YAAY,GAAG,WAAW,CAAA;IAE5B,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAA;IAE/B,QAAQ,IAAI;QACV,KAAK,QAAQ;YACX,OAAO,GAAG,SAAS,CAAA;YACnB,KAAK,GAAG,IAAI,CAAA;YACZ,OAAO,GAAG,SAAS,CAAA;YACnB,MAAM,GAAG,SAAS,CAAA;YAClB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAA;YACnC,MAAM;KAGT;IAED,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;IAChC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,UAAU,CAAA;IAC3F,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAA;IACnC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;IACvC,CAAA,MAAA,IAAI,CAAC,UAAU,CAAC,0CAAE,IAAI,MAAG,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;IACvE,QAAQ,QAAQ,CAAC,IAAI;QACnB,KAAK,MAAM;YACT,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAA;YAC7B,MAAM;QACR,KAAK,OAAO;YACV,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;YAC3B,MAAM;KAGT;AAEH,CAAC,CAAA;AAEM,MAAM,aAAa,GAAG,UAAU,UAAe,EAAE,UAAe;IACrE,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;QAC5B,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE;YACxB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAA;SACvB;KACF;IACD,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;QAC5B,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAA;KAClC;IACD,OAAO,UAAU,CAAA;AACnB,CAAC,CAAA;AAEM,MAAM,GAAG,GAAG,UAAU,GAAW;AAExC,CAAC,CAAA;AAEM,MAAM,KAAK,GAAG,UAAU,GAAW;AAE1C,CAAC,CAAA;AAEM,MAAM,IAAI,GAAG;IAClB,SAAS,EAAE;QACT,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,IAAI,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;KACvE;IACD,QAAQ,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAC;AACxF,CAAC;;ACtPD,MAAM,EAAE,wBAAwB,EAAE,OAAO,UAAEA,QAAM,EAAE,GAAG,UAAU,CAAA;AACzD,MAAM,aAAa,GAAG,CAAC,EAAO,EAAE,MAAW;IAC9C,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;IAClC,IAAI,aAAa,GAAG,EAAE,CAAA;IACtB,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;QAC1B,IAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;YAC3B,SAAS;SACZ;QACD,IAAI,IAAI,GAAG;YACP,GAAG,EAAE,GAAG;YACR,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC;SACzB,CAAA;QACD,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;IACD,WAAW,CAAC,EAAE,EAAE;QACZ,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,gBAAgB;QACxB,MAAM,kCACC,MAAM,KACT,UAAU,EAAE,aAAa,GAC5B;KACJ,CAAC,CAAA;AACN,CAAC,CAAA;AAEM,MAAM,gBAAgB,GAAG,CAAC,EAAO;IACpC,UAAU,CAAC,wBAAwB,GAAG,IAAI,CAAA;IAC1C,CAAC,wBAAwB,KAAK,UAAU,CAAC,oBAAoB,GAAG,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,uBAAuB,GAAG,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,0BAA0B,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;IAC5L,OAAO,CAAC,GAAG,GAAG;QACV,IAAIA,QAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YACpC,WAAW,CAAC,EAAE,EAAE;gBACZ,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,mBAAmB;gBAC3B,MAAM,EAAE;oBACJ,OAAO,EAAEA,QAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC;oBAC3C,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;oBACjB,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;iBACtB;aACJ,CAAC,CAAA;SACL;QACD,UAAU,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;KACzD,CAAA;IAED,OAAO,CAAC,MAAM,GAAG;QACb,UAAU,CAAC,uBAAuB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;QACzD,IAAIA,QAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YACpC,aAAa,CAAC,EAAE,EAAE,EAAC,OAAO,EAACA,QAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAC,CAAC,CAAA;SAClE;KACJ,CAAA;IAED,OAAO,CAAC,SAAS,GAAG;QAChB,UAAU,CAAC,0BAA0B,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;QAC5D,IAAIA,QAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YACpC,WAAW,CAAC,EAAE,EAAE;gBACZ,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,gBAAgB;gBACxB,MAAM,EAAE;oBACJ,OAAO,EAAEA,QAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC;oBAC3C,UAAU,EAAE,EAAE;iBACjB;aACJ,CAAC,CAAA;SACL;KACJ,CAAA;AACL,CAAC;;AC9DD,MAAM,EAAE,uBAAuB,EAAE,MAAM,EAAE,GAAG,UAAU,CAAA;AAC/C,MAAM,YAAY,GAAG,CAAC,EAAO,EAAE,MAAW;IAC7C,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;IAChC,IAAI,YAAY,GAAG,EAAE,CAAA;IACrB,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;QACzB,IAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;YAC3B,SAAS;SACZ;QACD,IAAI,IAAI,GAAG;YACP,GAAG,EAAE,GAAG;YACR,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC;SACxB,CAAA;QACD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;IACD,WAAW,CAAC,EAAE,EAAE;QACZ,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,eAAe;QACvB,MAAM,kCACC,MAAM,KACT,SAAS,EAAE,YAAY,GAC1B;KACJ,CAAC,CAAA;AACN,CAAC,CAAA;AAEM,MAAM,eAAe,GAAG,CAAC,EAAO;IACnC,UAAU,CAAC,uBAAuB,GAAG,IAAI,CAAA;IACzC,CAAC,uBAAuB,KAAK,UAAU,CAAC,mBAAmB,GAAG,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,yBAAyB,GAAG,MAAM,CAAC,SAAS,CAAC,CAAA;IACrL,MAAM,CAAC,GAAG,GAAG;QACT,IAAI,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YACpC,WAAW,CAAC,EAAE,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,kBAAkB;gBAC1B,MAAM,EAAE;oBACJ,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC;oBAC3C,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;oBACjB,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;iBACtB;aACJ,CAAC,CAAA;SACL;QACD,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;KACxD,CAAA;IAED,MAAM,CAAC,MAAM,GAAG;QACZ,UAAU,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;QACxD,IAAI,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YACpC,YAAY,CAAC,EAAE,EAAE,EAAC,OAAO,EAAC,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAC,CAAC,CAAA;SACjE;KACJ,CAAA;IAED,MAAM,CAAC,SAAS,GAAG;QACf,UAAU,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;QAC3D,IAAI,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE;YACpC,WAAW,CAAC,EAAE,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,eAAe;gBACvB,MAAM,EAAE;oBACJ,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC;oBAC3C,SAAS,EAAE,EAAE;iBAChB;aACJ,CAAC,CAAA;SACL;KACJ,CAAA;AACL,CAAC;;AC5DM,MAAM,gBAAgB,GAAG,CAAC,EAAO;IACpC,MAAM,EAAE,OAAO,EAAE,wBAAwB,EAAE,GAAG,UAAU,CAAA;IACxD,UAAU,CAAC,wBAAwB,GAAG,IAAI,CAAA;IAC1C,CAAC,wBAAwB,KAAK,UAAU,CAAC,qBAAqB,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IACxF,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG;QACrB,MAAM,SAAS,GAAG,IAAI,EAAE,CAAA;QACxB,WAAW,CAAC,EAAE,EAAE;YACZ,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,mBAAmB;YAC3B,MAAM,EAAE;gBACJ,EAAE,EAAE,SAAS;gBACb,WAAW,EAAE;oBACT,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,GAAG,EAAE,IAAI,CAAC,GAAG;oBACb,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB;aACJ;SACJ,CAAC,CAAA;QACF,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;QAC7B,MAAM,aAAa,GAAG,CAAC,GAAQ;YAC3B,WAAW,CAAC,EAAE,EAAE;gBACZ,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,mBAAmB;gBAC3B,MAAM,EAAE;oBACJ,EAAE,EAAE,SAAS;oBACb,YAAY,EAAE,GAAG;iBACpB;aACJ,CAAC,CAAA;YACF,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;SAC3B,CAAA;QACD,UAAU,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAA;KAChE,CAAA;AACL,CAAC;;AC/BD,IAAI,EAAM,EAAE,WAAkB,CAAA;qBACL,GAAU,EAAE,QAAY;IAC/C,EAAE,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAEnC,EAAE,CAAC,MAAM,GAAG;QACV,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACzB,gBAAgB,CAAC,EAAE,CAAC,CAAC;QACrB,eAAe,CAAC,EAAE,CAAC,CAAC;QACpB,gBAAgB,CAAC,EAAE,CAAC,CAAC;KACtB,CAAA;IAED,EAAE,CAAC,SAAS,GAAG,CAAC,KAAS;QACvB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QAChC,WAAW,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAA;QAC5B,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACxB,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;SACrC;KACF,CAAA;IAED,EAAE,CAAC,OAAO,GAAG;QACX,EAAE,GAAG,IAAI,CAAA;QACT,GAAG,CAAC,mBAAmB,CAAC,CAAC;KAC1B,CAAA;AACH,CAAC;AAEM,MAAM,WAAW,GAAG,UAAU,EAAM,EAAE,OAAW;IAEtD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,WAAW,CAAA;IACxC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAA;IACzC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAA;IACnC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACrB,IAAI,EAAE,MAAM,EAAE,MAAM;KACrB,CAAC,CAAC,CAAA;AACL,CAAC;;AC9BD,IAAI,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAA;SAErF,GAAG,CAAC,SAAc,EAAE,OAAe,WAAW;IAC5D,IAAI,YAAY,GAAG,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;IAC9C,GAAG,CAAC,qBAAqB,CAAC,CAAA;IAC1B,MAAM,EAAE,GAAG,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAA;IAEhD,IAAI,CAAC,GAAG,EAAE;QACR,KAAK,CAAC,sCAAsC,CAAC,CAAA;QAC7C,OAAM;KACP;IACD,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,UAAU,CAAA;IACtC,IAAI,IAAI,GAAG,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IACzC,IAAI,IAAI,GAAG,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IACzC,IAAI,IAAI,GAAG,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IACzC,IAAI,MAAM,GAAG,iBAAiB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;IAE7C,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;QAChD,KAAK,CAAC,eAAe,GAAG,0BAA0B,CAAC,CAAA;QACnD,OAAM;KACP;IACD,IAAI,UAAU,GAAG,QAAQ,IAAI,IAAI,IAAI,cAAc,CAAA;IAEnD,IAAI,aAAa,EAAE;QAEjB,UAAU,GAAG,qCAAqC,CAAA;KACnD;IAED,IAAI,OAAO,GAAG,EAAE,EAAE,MAAc,EAAE,IAAS,CAAA;IAC3C,MAAM,mBAAmB,GAAG;QAC1B,aAAa,EAAE,UAAU,EAAO,EAAE,MAAW;;YAC3C,IAAI,IAAI,GAAG,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;YAC1C,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;YACtB,IAAI,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,0CAAE,kBAAkB,EAAE;gBAC7C,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAS;oBAChD,WAAW,CAAC,EAAE,EAAE;wBACd,MAAM,EAAE,aAAa;wBACrB,MAAM,kCACD,MAAM,KACT,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAC3B,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,EAC/B,WAAW,EAAE,IAAI,GAClB;qBACF,CAAC,CAAA;iBACH,CAAC,CAAA;aACH;iBAAM;gBACL,WAAW,CAAC,EAAE,EAAE;oBACd,MAAM,EAAE,aAAa;oBACrB,MAAM,kCACD,MAAM,KACT,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAC3B,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,EAC/B,WAAW,EAAE,IAAI,GAClB;iBACF,CAAC,CAAA;aACH;SACF;QACD,aAAa,EAAE,UAAU,EAAO,EAAE,MAAW;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;YAEtB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAS;gBAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;gBAC9D,WAAW,CAAC,EAAE,EAAE;oBACd,MAAM,EAAE,aAAa;oBACrB,MAAM,kCACD,MAAM,KACT,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE,GAChC;iBACF,CAAC,CAAA;aACH,CAAC,CAAA;SACH;QACD,cAAc,EAAE,UAAU,EAAO,EAAE,MAAW;YAC5C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;YAEtB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;YACtB,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;YACrD,WAAW,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAA;SAC/C;QACD,YAAY,EAAE,UAAU,EAAO,EAAE,MAAW;YAC1C,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,OAAO,CAAA;YAC3C,QAAQ,IAAI;gBACV,KAAK,QAAQ;oBACX,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;oBACnB,MAAM;gBACR,KAAK,QAAQ;oBACX,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;oBACvB,MAAM;aAGT;YACD,WAAW,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAAA;SACjD;QACD,YAAY,EAAE,UAAU,EAAO,EAAE,MAAW;YAC1C,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,CAAC,CAAC;YACpD,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;SAC3B;QACD,WAAW,EAAE,UAAU,EAAO,EAAE,MAAW;YACzC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,MAAM,CAAA;YAC1C,QAAQ,IAAI;gBACV,KAAK,QAAQ;oBACX,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;oBAClB,MAAM;gBACR,KAAK,QAAQ;oBACX,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;oBACtB,MAAM;aAGT;YACD,WAAW,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,CAAA;SAChD;QACD,WAAW,EAAE,UAAU,EAAO,EAAE,MAAW;YACzC,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,CAAC,CAAC;YACpD,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;SAC1B;KACF,CAAA;IACD,UAAU,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA;IAC3C,GAAG,CAAC,8BAA8B,CAAC,CAAA;AACrC;;"}